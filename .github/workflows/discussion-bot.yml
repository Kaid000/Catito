name: GPT Discussion Bot

on:
  schedule:
    - cron: "*/1 * * * *"

jobs:
  check_discussions:
    runs-on: ubuntu-latest
    steps:
      - name: Read and reply in discussions
        uses: actions/github-script@v7
        with:
          script: |
            const fetch = require('node-fetch');

            const discussions = await github.rest.discussions.listDiscussions({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 5
            });

            for (const discussion of discussions.data) {
              const comments = await github.rest.discussions.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                discussion_number: discussion.number
              });

              for (const comment of comments.data) {
                if (comment.body.startsWith("@gpt") && !comment.body.includes("üí¨ GPT –æ—Ç–≤–µ—Ç:")) {
                  const prompt = comment.body.replace("@gpt", "").trim();

                  const response = await fetch("https://api.openai.com/v1/chat/completions", {
                    method: "POST",
                    headers: {
                      "Authorization": `Bearer ${process.env.OPENAI_API_KEY}`,
                      "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                      model: "gpt-4",
                      messages: [{ role: "user", content: prompt }]
                    })
                  });

                  const json = await response.json();
                  const answer = json.choices?.[0]?.message?.content || "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞.";

                  await github.rest.discussions.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    discussion_number: discussion.number,
                    body: `üí¨ GPT –æ—Ç–≤–µ—Ç:\n\n${answer}`
                  });
                }
              }
            };
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}